#PARSE_ESCAPES
itemGroup.circuits=Automated Redstone
# Blocks
# names
tile.cd4017be.programmer.name=§7§mCircuit Programmer
tile.cd4017be.assembler.name=Circuit Assembler
tile.cd4017be.circuit\:0.name=Circuit Casing §7Basic
tile.cd4017be.circuit\:1.name=Circuit Casing §3Accelerated
tile.cd4017be.circuit\:2.name=Circuit Casing §9High Speed
tile.cd4017be.rsp_32bit.name=32-bit-Signal Wire
tile.cd4017be.rsp_basic\:0.name=Solid Redstone Wire
tile.cd4017be.rsp_basic\:1.name=Redstone Receiver Wire
tile.cd4017be.rsp_basic\:2.name=Redstone Emitter Wire
tile.cd4017be.bit_shifter.name=Signal Bit Shifter
tile.cd4017be.multilever.name=8-bit Lever
tile.cd4017be.potentiometer.name=Redstone Potentiometer
tile.cd4017be.display.name=Signal LED-Display
tile.cd4017be.sensor_reader.name=Sensor Reader
tile.cd4017be.oszillograph.name=Oscilloscope
tile.cd4017be.inv_connector.name=Remote Block Connector
tile.cd4017be.designer.name=Circuit Designer
tile.cd4017be.fluid_valve.name=Fluid Valve
tile.cd4017be.energy_valve.name=Energy Valve
tile.cd4017be.wireless_con\:0.name=Wireless Signal Connectors
tile.cd4017be.wireless_con\:1.name=§bLinked§f Wireless Signal Connector
# tooltips
tile.cd4017be.programmer.tip=Deprecated, will be removed soon.\nLoad and save your old\nSchematics here for conversion.
tile.cd4017be.designer.tip=Used to design the circuit architecture\nand write it on a §6Schematic§7 for Assembling.
tile.cd4017be.assembler.tip=Used to install components into a\n§6Circuit Casing§7 based on a §6Schematic§7.
tile.cd4017be.circuit\:0.tip=Compact container for complicated redstone logic.\nInstall Components in §6Circuit Assembler§7.\nMax \\<circuit_speed:0> cycles per second
tile.cd4017be.circuit\:1.tip=Max \\<circuit_speed:1> cycles per second
tile.cd4017be.circuit\:2.tip=Max \\<circuit_speed:2> cycles per second
tile.cd4017be.rsp_32bit.tip=Lossless instant omnidirectional\ntransfer of 32-bit redstone signals.\nClick on sides to change their IO mode.\nSneak-Click to disconnect Wires.\nClick with solid block to cover.
tile.cd4017be.rsp_basic\:0.tip=Lossless redstone signal transfer\nfrom §6Receiver§7 to §6Emitter§7 Wires\n(long distances will cause delay)\nSneak-Click to disconnect Wires\nClick with solid block to cover.
tile.cd4017be.rsp_basic\:1.tip=Emits a redstone signal.\nSupports 8-bit RS-strength (0-255).
tile.cd4017be.rsp_basic\:2.tip=Receives a redstone signal.\nSupports 8-bit RS-strength (0-255).
tile.cd4017be.bit_shifter.tip=Transforms signals between bit levels which is usefull\nfor transmitting multiple signals within one cable.\nClick sides to adjust §1input§7/§2output§7 bit offset.\nInsert §6IO bus Relay§7s to increase signal size (1bit/item).\nSneak-Click to remove installed §6IO bus Relay§7s.
tile.cd4017be.multilever.tip=Emits an adjustable redstone strength\nthat's represented by the 8 lever states in binary.
tile.cd4017be.potentiometer.tip=Emits an adjustable redstone strength.\nClick on slider to set its value.\nClick on +/- arrows to in/decrement\n(step size depends on click pos logarithmically)\nClick on non front side of the block to configure range.
tile.cd4017be.display.tip=A fancy way to display redstone signals.\nSupports 32-bit RS-strength (+/- 2.147.483.648).
tile.cd4017be.sensor_reader.tip=Outputs the measurement value of a\n§6Sensor§7 module as 32-bit RS-strength.
tile.cd4017be.oszillograph.tip=Displays the graph of up to 4 input values over time.\nInputs can be Redstone signals or §6Sensor§7 modules.\nLike in real Oscilloscopes the GUI has lots of settings.
tile.cd4017be.inv_connector.tip=Provides remote access to capabilities\n(Item, Fluid, ...) of a connected Block.\nConnection shows green if linked and red if not.\nClick with empty hand to change orientation.\nClick with solid block to cover.
tile.cd4017be.fluid_valve.tip=Can control or measure fluid flow with redstone signals.\n(counts in units of 1mB)
tile.cd4017be.energy_valve.tip=Can control or measure energy flow with redstone signals.\nSupports §3RF§7 and §3Tesla§7 (counts in unit of 1RF).
tile.cd4017be.wireless_con\:0.tip=Connects two §6Solid Redstone§7 or §632-bit-Signal Wires\nacross any distance and even between dimensions.\nYou'll get the second connector when placing this one.
tile.cd4017be.wireless_con\:1.tip=Place to establish a connection with linked block.\nWarning: At least one of both connectors must\nstay placed in world to keep up the linkage.\nSneak-Click block to remove both connectors at once\nand get them back as the unlinked connector.

tile.cd4017be.multilever.click0=Output as bits 0-7 [1-128]
tile.cd4017be.multilever.click1=Output as bits 8-15 [256-32768]
tile.cd4017be.multilever.click2=Output as bits 16-23 [65536-8388608]
tile.cd4017be.multilever.click3=Output as bits 24-31 [16777216-2147483648]
msg.cd4017be.wireless0=The dropped second Connector will link to this.
msg.cd4017be.wireless1=§2Found linked Connector in dim %d @ [%d, %d, %d]
msg.cd4017be.wireless2=§4No Connector could be found in dim %d @ [%d, %d, %d] !
msg.cd4017be.wireless3=Linked to [%d, %d, %d] in dim %d
msg.cd4017be.wireless4=§2Both linked connectors removed
msg.cd4017be.wireless5=§4Can't find other connector!

# Items
# names
item.cd4017be.m\:empty_sensor.name=Blank Sensor Module
item.cd4017be.m\:io_relay.name=IO bus Relay
item.cd4017be.m\:ram_plate.name=8-bit Memory Board
item.cd4017be.m\:logic_prc.name=Logic Processor
item.cd4017be.m\:calc_prc.name=Arithmetic Processor
item.cd4017be.circuit_plan.name=Circuit Schematic
item.cd4017be.item_sensor.name=Item Sensor §e(%.0f)
item.cd4017be.fluid_sensor.name=Fluid Sensor §e(%.0fmB)
item.cd4017be.energy_sensor.name=Energy Sensor §e(%.0fkJ)
item.cd4017be.time_sensor.name=Time Sensor Module
# tooltips
item.cd4017be.circuit_plan.tip=Contains the building instructions for a cicuit.\nAfter being written in the §6Circuit Designer§7\nit can be used in the §6Circuit Assembler§7.
item.cd4017be.item_sensor.tip=§6Sensor§7 module for counting items.\nUses block drops and items laying around\nif target block is not an inventory.\nRight-Click to configure filter.\nSneak-Click block to link (max \\<itemSensor_range>m range).
item.cd4017be.fluid_sensor.tip=§6Sensor§7 module for counting fluids.\nUses tank contents or fluids placed in world.\nRight-Click to configure filter.\nSneak-Click block to link (max \\<fluidSensor_range>m range).
item.cd4017be.energy_sensor.tip=§6Sensor§7 module for counting energy.\nSupports: §3kJ§7[x1], §3Tesla/RF§7[x0.1], §3EU§7[x0.4]\nSneak-Click block to link (max \\<energySensor_range>m range).
item.cd4017be.time_sensor.tip=§6Sensor§7 module for time measurement [s].\nCan use §3server-tick§7, §3ingame§7 or §3real-world§7 time.\nRight-Click to configure settings.\nSneak-Click block to link as signal source.

# GUI
gui.cd4017be.tickInt=%.2fs
# Inventory names
gui.cd4017be.programmer.name=Programm:
gui.cd4017be.assembler.name=Circuit Assembler
gui.cd4017be.circuit.name=Circuit
gui.cd4017be.display.name=Display
gui.cd4017be.sensor_reader.name=Sensor Reader
gui.cd4017be.item_sensor.name=Item Filter
gui.cd4017be.fluid_sensor.name=Fluid Filter
gui.cd4017be.time_sensor.name=Time Measurement
gui.cd4017be.oszillograph.name=Oszilloscope Settings
gui.cd4017be.designer.name=Circuit Design:
gui.cd4017be.potentiometer.name=Range:
gui.cd4017be.fluid_valve.name=Fluid Valve Control
gui.cd4017be.energy_valve.name=Energy Valve Control
# Gui tooltips
gui.cd4017be.item_sensor.neg=Invert filter?
gui.cd4017be.item_sensor.ore=Use Ore-Dictionary?
gui.cd4017be.item_sensor.nbt=Check NBT data?
gui.cd4017be.item_sensor.meta=Check damage/meta?
gui.cd4017be.item_sensor.tip=§4emptySlots,§4anything,§4not§7 , §2meta, §2NBT, §2ore
gui.cd4017be.fluid_sensor.tip=§4remaining space,§4anything,§4not§7 
gui.cd4017be.time_sensor.src0=Time source:\nServer Ticks
gui.cd4017be.time_sensor.src1=Time source:\nIngame Time
gui.cd4017be.time_sensor.src2=Time source:\nSystem Time
gui.cd4017be.time_sensor.ref=Starting date:
gui.cd4017be.time_sensor.int=Time interval:
gui.cd4017be.time_sensor.srcT0=Time based on server ticks.\nRecommended for timing tasks.
gui.cd4017be.time_sensor.srcT1=The ingame time, where day/night\ncycle and moon phases are bound to.
gui.cd4017be.time_sensor.srcT2=Real-world system time of the\nserver that is running minecraft.
gui.cd4017be.time_sensor.mode0=Emit time passed since starting date.
gui.cd4017be.time_sensor.mode1=Restart when time interval passed.
gui.cd4017be.time_sensor.mode2=Restart when linked Block emits redstone.
gui.cd4017be.time_sensor.mode3=Emit time between last two redstone signals.
gui.cd4017be.assembler.err-1=Empty
gui.cd4017be.assembler.msg-1=No §6Schematic§f -> disassembling circuits instead
gui.cd4017be.assembler.err0=§2Valid
gui.cd4017be.assembler.msg0=Schematic valid for assembling circuits
gui.cd4017be.assembler.err1=§4Error
gui.cd4017be.assembler.msg1=Argument address out of bounds!\nCorrupted Schematic data?
gui.cd4017be.assembler.err2=§4Invalid
gui.cd4017be.assembler.msg2=Too many constants to fit in address space!
gui.cd4017be.assembler.err3=§4Invalid
gui.cd4017be.assembler.msg3=Schematic contains more than the maximum of 6 allowed IO channels!
gui.cd4017be.assembler.err4=§4Error
gui.cd4017be.assembler.msg4=Compiler crashed with java Exception (see log)!\nCorrupted Schematic data?
gui.cd4017be.assembler.cmp0=§6IO bus Relay§fs for communication bandwith.
gui.cd4017be.assembler.cmp1=§6Memory Board§fs for storage capacity.
gui.cd4017be.assembler.cmp2=§6Logic Processor§fs for logic operations.
gui.cd4017be.assembler.cmp3=§6Arithmetic Processor§fs for nummeric operations.
gui.cd4017be.circuit.on0=Offline
gui.cd4017be.circuit.on1=Clock mode: updates\nevery tick interval
gui.cd4017be.circuit.on2=Interrupt mode: updates\nwhen input changes
gui.cd4017be.circuit.on3=Double interrupt mode:\nupdates twice
gui.cd4017be.circuit.reset=Sets all memory bits to off.
gui.cd4017be.circuit.timer=Tick interval
gui.cd4017be.circuit.dirI=Input %s
gui.cd4017be.circuit.dirO=Output %s
gui.cd4017be.circuit.ofsI=singal offset: %d bit\n(strength / %d)
gui.cd4017be.circuit.ofsO=singal offset: %d bit\n(strength * %d)
gui.cd4017be.circuit.ext=Signal bit offset
gui.cd4017be.circuit.size=Signal size in bits
gui.cd4017be.program.save=Save/Compile program\n[Ctrl-S]
gui.cd4017be.program.load=Load program
gui.cd4017be.program.up=view previous byte\n[PRIOR]
gui.cd4017be.program.down=view next byte\n[NEXT]
gui.cd4017be.program.n=program name
gui.cd4017be.program.index=Indices:   (byteIndex : bitIndex)\n§einput of selected operation\n§4output of selected operation\nClick on dots to m as input\nparameter for sel. operation.
gui.cd4017be.program.code=Syntax definitions: §e"..."§7 = code, §2L.§7 = {§e<bitIndex>§7} bit parameter, §3N.§7 = {§e<constant>§7, §1T§e<byteIndex>§7} numeric parameter, §1T§7 = number type prefix {§1B§7, §1S§7, §1M§7, §1I§7}:signed or {§1b§7, §1s§7, §1m§7, §1i§7}:unsigned with 8, 16, 24, 32 bits\nThese define the binary state in their bit index:\n§7LogicGates §e"§4X§2L1§7,§2L2§7,§2...§e"§7 with §4X§7 = {§4+§7: OR, §4-§7: NOR, §4&§7: AND, §4*§7: NAND, §4/§7: XOR, §4\\§7: XNOR} and §20-15 parameters§7\n§7Comparator §e"§4X§3N1§7,§3N2§e"§7 with §4X§7 = {§4<§7: §3N1§7<§3N2§7, §4>§7: §3N1§7>=§3N2§7, §4=§7: §3N1§7==§3N2§7, §4~§7: §3N1§7!=§3N2§7}\nThese define the number stored in their 1-4 byte indices:\n§7Arithmetic §e"§1T§4X§3N1§7,§3N2§e"§7 with §4X§7 = {§4+§7: §3N1§7+§3N2§7, §4-§7: §3N1§7-§3N2§7, §4*§7: §3N1§7*§3N2§7, §4/§7: §3N1§7/§3N2§7, §4%§7: §3N1§7mod§3N2§7}\n§7Switch §e"§1T§7?§3N1§7,§3N2§7,§2L3§e"§7 returns §3N1§7 if §2L3§7 active, else §3N2§7\n§7Counter §e"§1T§7$§3N1§7,§3N2§7,§2L3§7,§2L4§e"§7 resets to §3N2§7 if §2L4§7 active else increments by §3N1§7 if §2L3§7 active\nAlso read section 5.2 of the PDF-Manual available on GitHub
gui.cd4017be.program.label=Just for better overview\nAlso shows up in Index
gui.cd4017be.program.head=Index\nCode\nLabel
gui.cd4017be.program.view0=Bit index view\n(for logic operators)
gui.cd4017be.program.view1=Byte index view\n(for numeric operators)
gui.cd4017be.err1=Programm loaded
gui.cd4017be.err2=Programm saved
gui.cd4017be.err3=Compiling Successfull
gui.cd4017be.err4=Invalid data device!
gui.cd4017be.err5=Required §6Memory§c bytes: %d
gui.cd4017be.err6=Required §6Logic§c gates: %d
gui.cd4017be.err7=Required §6Arithmetic§c: %d
gui.cd4017be.err8=Programm too big! max 512 bytes
gui.cd4017be.err9=Invalid index/number @ %02X
gui.cd4017be.err10=Invalid arguments @ %02X
gui.cd4017be.err11=Invalid operation @ %02X
gui.cd4017be.err12=Compile error @ %02X
gui.cd4017be.err13=Overlapping operations @ %02X
gui.cd4017be.potent.min=Minimum redstone value\n(any integer allowed)
gui.cd4017be.potent.max=Maximum redstone value\n(any integer allowed)
gui.cd4017be.display.ext=signal bit offset
gui.cd4017be.display.size=signal size in bits
gui.cd4017be.display.text=Text rendered on display
gui.cd4017be.display.mode=Number type for converting\nsignal into digits.
gui.cd4017be.display.format=Display format:\n'0123456789ABCDEF.:-%' displayed as they are\n'#' displays next digit of signal\n'$' skips one digit without displaying\nN+'S' skips N digits (N = '1'...'9')\n'+' formats number signed and displays its sign\n'_' displays placeholder digit\nAnything else displays empty space.
gui.cd4017be.sensor.mult=Signal multiplier
gui.cd4017be.sensor.add=Signal offset
gui.cd4017be.sensor.timer=Update\nInterv.
gui.cd4017be.valve.tick=§1%.2fs
gui.cd4017be.valve.timer=Time Interval (T) for\nmeasurement/transfer
gui.cd4017be.fluidvalve.mode0=Limit fluid flow
gui.cd4017be.fluidvalve.mode1=Measure fluid flow
gui.cd4017be.fluidvalve.flow=Current flow:\n§8%sB/§1T
gui.cd4017be.energyvalve.mode0=Limit energy flow
gui.cd4017be.energyvalve.mode1=Measure energy flow
gui.cd4017be.energyvalve.flow=Current flow:\n§8%sRF/§1T
gui.cd4017be.oszi.add=vertical Graph offset\n[horizontal lines relative to center]
gui.cd4017be.oszi.div=Signal value represented\nby one horizontal line.
gui.cd4017be.oszi.rsIn=The block face when using\nRedstone signals as channel input.
gui.cd4017be.oszi.on=Enable/Disable this signal channel.
gui.cd4017be.oszi.time=Time interval represented\nby one vertical line.
gui.cd4017be.oszi.int=%.1fs
gui.cd4017be.oszi.info=Info label to draw on graph.
gui.cd4017be.oszi.trigger0=Automatic periodic trigger
gui.cd4017be.oszi.trigger1=Trigger by redstone signal
gui.cd4017be.oszi.trigger2=Trigger by §6Sensor§f value
gui.cd4017be.oszi.trigger3=Pause operation
gui.cd4017be.oszi.src=Trigger signal source:\nBlock face for redstone\nor channel for §6Sensor§f module.
gui.cd4017be.oszi.comp0=Trigger when signal above level
gui.cd4017be.oszi.comp1=Trigger when signal below level
gui.cd4017be.oszi.level=Signal compare level
gui.cd4017be.oszi.signed0=unsigned
gui.cd4017be.oszi.signed1=signed
gui.cd4017be.designer.m0=OR-Gate
gui.cd4017be.designer.m1=NOR-Gate
gui.cd4017be.designer.m2=AND-Gate
gui.cd4017be.designer.m3=NAND-Gate
gui.cd4017be.designer.m4=XOR-Gate
gui.cd4017be.designer.m5=XNOR-Gate
gui.cd4017be.designer.m6=Less Comparator
gui.cd4017be.designer.m7=More or Equal Comparator
gui.cd4017be.designer.m8=Equal Comparator
gui.cd4017be.designer.m9=not Equal Comparator
gui.cd4017be.designer.mA=Counter
gui.cd4017be.designer.mB=Multiplexer Switch
gui.cd4017be.designer.mC=Add Operator
gui.cd4017be.designer.mD=Subtract Operator
gui.cd4017be.designer.mE=Multiply Operator
gui.cd4017be.designer.mF=Divide Operator
gui.cd4017be.designer.mG=Modulo Operator
gui.cd4017be.designer.del=Delete sel Component\nShortcut:§aDELETE
gui.cd4017be.designer.out0=Size of sel Component
gui.cd4017be.designer.out1=8-bit Operator
gui.cd4017be.designer.out2=16-bit Operator
gui.cd4017be.designer.out3=24-bit Operator
gui.cd4017be.designer.out4=32-bit Operator
gui.cd4017be.designer.in0=Type of sel input
gui.cd4017be.designer.in1=8-bit Input
gui.cd4017be.designer.in2=16-bit Input
gui.cd4017be.designer.in3=24-bit Input
gui.cd4017be.designer.in4=32-bit Input
gui.cd4017be.designer.in5=Constant Input
gui.cd4017be.designer.const=Constant value
gui.cd4017be.designer.label=Component Label\n(for better overview)
gui.cd4017be.designer.scroll=Shortcut:\n§aPRIOR§7/§aNEXT
gui.cd4017be.designer.sgn0=
gui.cd4017be.designer.sgn1=Unsigned
gui.cd4017be.designer.sgn2=Signed
gui.cd4017be.designer.wire0=Only show wiring of sel Comp.
gui.cd4017be.designer.wire1=Show all wirings\n(possibly messy)
gui.cd4017be.designer.Pname=Name your creation here
gui.cd4017be.designer.load=Load from Schematic Item\n+§aSHIFT§7: from local File
gui.cd4017be.designer.save=Save to Schematic Item\n+§aSHIFT§7: to local File
gui.cd4017be.designer.loaded=Schematic successfully loaded!
gui.cd4017be.designer.saved=Schematic saved as: %s
gui.cd4017be.designer.notFound=Can't find schematic file: %s
gui.cd4017be.designer.noname=Schematic needs a name to be saved!
gui.cd4017be.designer.io0=Add Input channel
gui.cd4017be.designer.io1=Add Output channel
gui.cd4017be.designer.mode0=Editor Mode:\nOperation Layer
gui.cd4017be.designer.mode1=Editor Mode:\nOutput Layer
gui.cd4017be.designer.info=§f§nBasic Controls:\n§7Add Components to the circuitboard using the sourounding buttons.\n§7Left-click a component on the circuitboard to select it for configuration.\n§7Hold Left-mouse to move it around.\n§7Use mouse-wheel to cycle through its input sockets.\n§7Right-click another component to connect the currently selected input socket with the output of that component.\n§f§nSignal and Component Types:\n§1Logic signals§7 (small socket) are represented by just a single cell (bit) on the circuitboard and can be either ON or OFF. (Outputted by §2Logic Components§7)\n§aNummeric signals§7 (bigger socket) are represented by one or more entire rows (bytes) on the circuitboard forming the number in binary.\n§7Change the size of §3nummeric Components§7 and input sockets using the upper two buttons next your inventory. Alternatively nummeric inputs can also be set to a constant.\n§f§nExternal IO access:\n§7While §eInput channels§7 are placed like normal Components, §6Output channels§7 are layed on top of other Components, therefore first change the editor mode to §8"output layer"§7.\n§7The size of I/O channels is changed using the constant value textfield after selecting them.\n§7A circuit can have up to 6 I/O channels and it's recommended to name these for later recognization.
