// Blocks
// names
tile.cd4017be.programmer.name=Circuit Programmer
tile.cd4017be.assembler.name=Circuit Assembler
tile.cd4017be.circuit.name=Redstone Circuit
tile.cd4017be.rsp8bit.name=32-bit-Signal Wire
tile.cd4017be.rsp1bit:0.name=Solid Redstone Wire
tile.cd4017be.rsp1bit:1.name=Redstone Receiver Wire
tile.cd4017be.rsp1bit:2.name=Redstone Emitter Wire
tile.cd4017be.lever8bit.name=8-bit Lever
tile.cd4017be.display8bit.name=Signal LED-Display
tile.cd4017be.blockSensor.name=Sensor Module Container
tile.cd4017be.invConnector.name=Remote Block Connector
// tooltips
tile.cd4017be.programmer.tip=Used to programm the actual\ncircuitry in Redstone Circuits.
tile.cd4017be.assembler.tip=Used to add hardware\ncomponents to Redstone Circuits.
tile.cd4017be.circuit.tip=Compact container for complicated redstone logic\nSide connections use 32-bit RS-strength.\nSee also: Circuit Assembler, Circuit Programmer
tile.cd4017be.rsp8bit.tip=Lossless instant omnidirectional\ntransfer of 32-bit redstone signals.\nClick on sides to change their IO mode.\nSneak-Click to disconnect Wires.\nClick with solid block to cover.
tile.cd4017be.rsp1bit:0.tip=Lossless redstone signal transfer\nfrom Receiver to Emitter Wires\n(long distances will cause delay)\nSneak-Click to disconnect Wires\nClick with solid block to cover.
tile.cd4017be.rsp1bit:1.tip=Emits a redstone signal.\nSupports 8-bit RS-strength (0-255).
tile.cd4017be.rsp1bit:2.tip=Receives a redstone signal.\nSupports 8-bit RS-strength (0-255).
tile.cd4017be.lever8bit.tip=8 levers in one block.\nEmits lever states as 8-bit-strength (0-255).
tile.cd4017be.display8bit.tip=A fancy way to display redstone signals.\nSupports 32-bit RS-strength (+/- 2.147.483.648).
tile.cd4017be.blockSensor.tip=Outputs the measurement of up to 6 Sensor Modules.\nEach side emits one value as 32-bit RS-strength.
tile.cd4017be.invConnector.tip=Provides remote access to capabilities\n(Item, Fluid, ...) of a connected Block.\nConnection shows green if linked and red if not.\nClick with empty hand to change orientation.\nClick with solid block to cover.

// Items
// names

item.cd4017be.m:emptySensor.name=Blank Sensor Module
item.cd4017be.circuitPlan.name=Circuit Programm
item.cd4017be.itemSensor.name=Item Sensor §e(%.0f)
item.cd4017be.fluidSensor.name=Fluid Sensor §e(%.0fmB)
item.cd4017be.energySensor.name=Energy Sensor §e(%.0fkJ)
item.cd4017be.timeSensor.name=Time Sensor Module
// tooltips
item.cd4017be.circuitPlan.tip=Stores programm sourcecode for later use.\nPut paper into your Circuit Programmer to save.
item.cd4017be.itemSensor.tip=Sensor module for counting items.\nUses block drops and items laying around\nif target block is not an inventory.\nRight-Click to configure filter.\nSneak-Click block to link (max 20m range).
item.cd4017be.fluidSensor.tip=Sensor module for counting fluids.\nUses tank contents or fluids placed in world.\nRight-Click to configure filter.\nSneak-Click block to link (max 20m range).
item.cd4017be.energySensor.tip=Sensor module for counting energy.\nSupports: §3kJ§7[x1], §3Tesla/RF§7[x0.1], §3EU§7[x0.4]\nSneak-Click block to link (max 20m range).
item.cd4017be.timeSensor.tip=Sensor module for time measurement [s].\nCan use §3server-tick§7, §3ingame§7 or §3real-world§7 time.\nRight-Click to configure settings.\nSneak-Click block to link as signal source.

//GUI
gui.cd4017be.tickInt=%.2fs
//Inventory names
gui.cd4017be.programmer.name=Programm:
gui.cd4017be.assembler.name=Assembler
gui.cd4017be.circuit.name=Circuit
gui.cd4017be.invReader.name=Inventory Sensor
gui.cd4017be.itemTranslocator.name=Item Translocator
gui.cd4017be.display8bit.name=Display
gui.cd4017be.blockSensor.name=Sensor Module Container
gui.cd4017be.itemSensor.name=Item Filter
gui.cd4017be.fluidSensor.name=Fluid Filter
gui.cd4017be.timeSensor.name=Time Measurement
//Gui tooltips
gui.cd4017be.itemSensor.neg=Invert filter?
gui.cd4017be.itemSensor.ore=Use Ore-Dictionary?
gui.cd4017be.itemSensor.nbt=Check NBT data?
gui.cd4017be.itemSensor.meta=Check damage/meta?
gui.cd4017be.itemSensor.tip=§4emptySlots,§4anything,§4not§7 , §2meta, §2NBT, §2ore
gui.cd4017be.fluidSensor.tip=§4remaining space,§4anything,§4not§7 
gui.cd4017be.timeSensor.src0=Time source:\nServer Ticks
gui.cd4017be.timeSensor.src1=Time source:\nIngame Time
gui.cd4017be.timeSensor.src2=Time source:\nSystem Time
gui.cd4017be.timeSensor.ref=Starting date:
gui.cd4017be.timeSensor.int=Time interval:
gui.cd4017be.timeSensor.srcT0=Time based on server ticks.\nRecommended for timing tasks.
gui.cd4017be.timeSensor.srcT1=The ingame time, where day/night\ncycle and moon phases are bound to.
gui.cd4017be.timeSensor.srcT2=Real-world system time of the\nserver that is running minecraft.
gui.cd4017be.timeSensor.mode0=Emit time passed since starting date.
gui.cd4017be.timeSensor.mode1=Restart when time interval passed.
gui.cd4017be.timeSensor.mode2=Restart when linked Block emits redstone.
gui.cd4017be.timeSensor.mode3=Emit time between last two redstone signals.
gui.cd4017be.assembler.add0=Add IO-bits to allow the circuit\ncommunicate with other blocks.\nLC adds 1, RC adds 8
gui.cd4017be.assembler.add1=Increase byte capacity to\nfill in more circuitry\nLC adds 1, RC adds 8
gui.cd4017be.assembler.add2=Add redstone to build in\nsimple logic gates\nLC adds 1, RC adds 8
gui.cd4017be.assembler.add3=Add quartz to build in\nmore advanced calulators\nLC adds 1, RC adds 8
gui.cd4017be.assembler.destr=Disassemble circuits to get the parts back.
gui.cd4017be.assembler.comp0=IO-bits: %d
gui.cd4017be.assembler.comp1=Storage: %d
gui.cd4017be.assembler.comp2=Gates: %d
gui.cd4017be.assembler.comp3=Calc: %d
gui.cd4017be.circuit.dir=Signal direction
gui.cd4017be.circuit.ram=Start index in circuit\n(hex-number 00...FF) 
gui.cd4017be.circuit.ext=Signal bit offset.\n(dec-number 0...31)
gui.cd4017be.circuit.size=Signal size in bits.\n(dec-number 1...32)
gui.cd4017be.circuit.on=Turn circuit operation on/off.
gui.cd4017be.circuit.reset=Sets all memory bits to off.
gui.cd4017be.circuit.timer=Tick interval
gui.cd4017be.circuit.io=Used IO-bits: %d / %d
gui.cd4017be.program.save=Save/Compile program\n[Ctrl-S]
gui.cd4017be.program.load=Load program
gui.cd4017be.program.up=view previous byte\n[PRIOR]
gui.cd4017be.program.down=view next byte\n[NEXT]
gui.cd4017be.program.n=program name
gui.cd4017be.program.index=Indices:   (byteIndex : bitIndex)\n§einput of selected operation\n§4output of selected operation\nClick on dots to add as input\nparameter for sel. operation.
gui.cd4017be.program.code=Syntax definitions: §e"..."§7 = code, §2L.§7 = {§e<bitIndex>§7} bit parameter, §3N.§7 = {§e<constant>§7, §1T§e<byteIndex>§7} numeric parameter, §1T§7 = number type prefix {§1B§7, §1S§7, §1M§7, §1I§7}:signed or {§1b§7, §1s§7, §1m§7, §1i§7}:unsigned with 8, 16, 24, 32 bits\nThese define the binary state in their bit index:\n§7LogicGates §e"§4X§2L1§7,§2L2§7,§2...§e"§7 with §4X§7 = {§4+§7: OR, §4-§7: NOR, §4&§7: AND, §4*§7: NAND, §4/§7: XOR, §4\§7: XNOR} and §20-15 parameters§7\n§7Comparator §e"§4X§3N1§7,§3N2§e"§7 with §4X§7 = {§4<§7: §3N1§7<§3N2§7, §4>§7: §3N1§7>=§3N2§7, §4=§7: §3N1§7==§3N2§7, §4~§7: §3N1§7!=§3N2§7}\nThese define the number stored in their 1-4 byte indices:\n§7Arithmetic §e"§1T§4X§3N1§7,§3N2§e"§7 with §4X§7 = {§4+§7: §3N1§7+§3N2§7, §4-§7: §3N1§7-§3N2§7, §4*§7: §3N1§7*§3N2§7, §4/§7: §3N1§7/§3N2§7, §4%§7: §3N1§7mod§3N2§7}\n§7Switch §e"§1T§7?§3N1§7,§3N2§7,§2L3§e"§7 returns §3N1§7 if §2L3§7 active, else §3N2§7\n§7Counter §e"§1T§7$§3N1§7,§3N2§7,§2L3§7,§2L4§e"§7 resets to §3N2§7 if §2L4§7 active else increments by §3N1§7 if §2L3§7 active\nAlso read section 5.2 of the PDF-Manual available on GitHub
gui.cd4017be.program.label=Just for better overview\nAlso shows up in Index
gui.cd4017be.program.head=Index\nCode\nLabel
gui.cd4017be.program.view0=Bit index view\n(for logic operators)
gui.cd4017be.program.view1=Byte index view\n(for numeric operators)
gui.cd4017be.err1=Programm loaded
gui.cd4017be.err2=Programm saved
gui.cd4017be.err3=Compiling Successfull
gui.cd4017be.err4=Invalid data device!
gui.cd4017be.err5=Required capacity: %d
gui.cd4017be.err6=Required logic gates: %d
gui.cd4017be.err7=Required calculators: %d
gui.cd4017be.err8=Programm too big! max 512 bytes
gui.cd4017be.err9=Invalid index/number @ %02X
gui.cd4017be.err10=Invalid arguments @ %02X
gui.cd4017be.err11=Invalid operation @ %02X
gui.cd4017be.err12=Compile error @ %02X
gui.cd4017be.err13=Overlapping operations @ %02X
gui.cd4017be.display8bit.text=Text rendered on display
gui.cd4017be.display8bit.mode=Number type for converting\nsignal into digits.
gui.cd4017be.display8bit.format=Display format:\n'0123456789ABCDEF.:-%' displayed as they are\n'#' displays next digit of signal\n'$' skips one digit without displaying\nN+'S' skips N digits (N = '1'...'9')\nAnything else displays empty space.
gui.cd4017be.sensor.mult=Signal multiplier
gui.cd4017be.sensor.add=Signal offset
gui.cd4017be.sensor.in=Neighbor block to inspect
gui.cd4017be.sensor.acc=Access side for inspection
gui.cd4017be.sensor.timer=Update\nInterv.

gui.cd4017be.trans.invIn=Neighbor source inventory
gui.cd4017be.trans.invOut=Neighbor destination inventory
gui.cd4017be.trans.am=Transfer amount
gui.cd4017be.trans.redir=Side to redirect inventory access\nfrom neighbor translocators.
